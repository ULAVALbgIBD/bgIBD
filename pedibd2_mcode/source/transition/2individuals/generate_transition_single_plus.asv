function [p, tp] = generate_transition_single_plus(pt, r, ref_prio, ref_tran)

%modify when pt = 0

ibd0 = 1;
ibd1 = 2;
ibd1_b = 3;

tp(ibd0:ibd1_b, ibd0:ibd1_b) = 0;

p(ibd0:ibd1_b) = 0;

[sum_prio, sum_tran] = path_tran(pt, r); 

p(ibd1) = sum_prio;

p(ibd1_b) = ref_prio;

if( p(ibd1_b) + p(ibd1) >= 1 )
    p(ibd1_b) = 0;  %impossible in most cases
end

p(ibd0) = 1 - p(ibd1) - p(ibd1_b);


if( p(ibd1) ~= 0 )
    tp(ibd1,ibd1) = 0;
    tp(ibd1,ibd1) = sum_tran/sum_prio;
else
    
end

tp(ibd1,ibd0) = 1 - tp(ibd1,ibd1);
tp(ibd1,ibd1_b) = 0;


if( p(ibd1_b) == 0 )
    tp(ibd1_b,ibd1_b) = 0;
end



t(ibd1_b, ibd1) = 0;
t(ibd1, ibd1_b) = 0;



tp(ibd1_b, ibd1) = 0;
tp(ibd1_b,ibd1_b) = ((1+exp(-2*r))/2)^ref_tran;

tp(ibd1_b, ibd0) = 1 - tp(ibd1_b, ibd1_b) - tp(ibd1_b, ibd1);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

tp(ibd0,ibd1) = ( tp(ibd1,ibd0) + tp(ibd1,ibd1_b) ) * p(ibd1) / ( p(ibd0) + p(ibd1_b) );

tp(ibd0, ibd1_b) = ( p(ibd1_b) * ( tp(ibd1_b,ibd0) + tp(ibd1_b,ibd1) ) - p(ibd1) * tp(ibd1,ibd1_b) ) / p(ibd0);
tp(ibd0,ibd0) = 1 - tp(ibd0,ibd1) - tp(ibd0,ibd1_b);


end



